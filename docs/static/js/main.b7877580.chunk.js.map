{"version":3,"sources":["components/CardGif.js","getFetchGifs.js","components/GridGifs.js","hooks/useFetchGifs.js","components/AddCategory.js","components/Navbar.js","GifsApp.js","index.js"],"names":["CardGif","title","url","className","src","alt","getFetchGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GridGifs","useState","loading","state","setState","useEffect","then","imgs","useFetchGifs","AddCategory","setCategory","value","setValue","onSubmit","e","preventDefault","trim","length","categories","Swal","fire","text","icon","confirmButtonText","confirmButtonColor","type","placeholder","onChange","target","Navbar","GifsApp","ReactDOM","render","document","getElementById"],"mappings":"gMAWeA,EATC,SAAC,GAAwB,IAAnBC,EAAkB,EAAlBA,MAAOC,EAAW,EAAXA,IAC3B,OACE,sBAAKC,UAAY,yCAAjB,UACI,qBAAKC,IAAOF,EAAMG,IAAOJ,IACzB,kCAAMA,EAAN,W,uBCLKK,EAAY,uCAAI,WAAQC,GAAR,uBAAAC,EAAA,6DAErBN,EAFqB,iDAE4BO,UAAUF,GAFtC,+DAGPG,MAAOR,GAHA,cAGrBS,EAHqB,gBAIHA,EAAKC,OAJF,uBAInBC,EAJmB,EAInBA,KAEFC,EAAOD,EAAKE,KAAM,SAAAC,GAAQ,IAAD,EAE7B,MAAO,CACLC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAXX,kBAgBpBY,GAhBoB,4CAAJ,sDCIZM,EAAW,SAAC,GAAqB,IAAjBb,EAAgB,EAAhBA,SAAgB,ECDjB,SAAEA,GAAgB,IAAD,EAGjBc,mBAAS,CACjCR,KAAK,GACLS,SAAS,IALgC,mBAGpCC,EAHoC,KAG7BC,EAH6B,KAa3C,OAJEC,qBAAU,WACRnB,EAAaC,GAAUmB,MAAM,SAAAC,GAAI,OAAIH,EAAS,CAAEX,KAAKc,EAAML,SAAQ,SACnE,CAAEf,IAECgB,EDV0BK,CAAcrB,GAAlCW,EAF8B,EAEnCL,KAFmC,EAEtBS,QAErB,OACE,qCACA,2CAAef,EAAf,OACC,qBAAKJ,UAAY,YAAjB,SAEKe,EAAOH,KAAK,SAAAY,GAAI,OACd,cAAC,EAAD,eAEOA,GADGA,EAAKV,a,wBEVdY,EAAc,SAAC,GAAyB,IAArBC,EAAoB,EAApBA,YAAoB,EAExBT,mBAAS,IAFe,mBAE3CU,EAF2C,KAEpCC,EAFoC,KA6BlD,OACE,sBAAMC,SApBa,SAACC,GACpBA,EAAEC,iBAEIJ,EAAMK,OAAOC,OAAS,GAC1BP,GAAa,SAAAQ,GAAU,OAAOP,GAAP,mBAAiBO,OACxCN,EAAS,KAGTO,IAAKC,KAAK,CACRvC,MAAO,WACPwC,KAAM,2BACNC,KAAM,QACNC,kBAAmB,aACnBC,mBAAoB,aAOxB,SACE,sBAAKzC,UAAU,gBAAf,UACA,uBACI0C,KAAK,OACLC,YAAa,iDACbf,MAAUA,EACVgB,SA/BkB,SAACb,GACzBF,EAAWE,EAAEc,OAAOjB,UAgChB,wBAAQc,KAAM,SAAd,0BCxCKI,EAAS,SAAC,GAAwB,IAApBnB,EAAmB,EAAnBA,YACzB,OACE,sBAAK3B,UAAY,SAAjB,UAEI,kDACA,cAAC,EAAD,CAAa2B,YAAgBA,QCJxBoB,EAAU,WAAO,IAAD,EAEO7B,mBAAS,CAAC,SAFjB,mBAEpBiB,EAFoB,KAERR,EAFQ,KAI3B,OAAO,qCAEL,cAAC,EAAD,CAAQA,YAAgBA,IAEtBQ,EAAWvB,KAAK,SAAAR,GAAQ,OACtB,cAAC,EAAD,CAEEA,SAAaA,GADLA,UCVlB4C,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.b7877580.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst CardGif = (  {  title, url } ) => {\r\n  return (\r\n    <div className = 'card animate__animated animate__fadeIn' >\r\n        <img src= { url } alt= { title } />\r\n        <p> { title } </p>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CardGif\r\n","// Peticion API y traer informacion // Retorna un promesa\r\nexport const getFetchGifs =  async ( category ) => {\r\n\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=ihej9JGDmJcz7yZhEj6KGMofgIh19YHe`;\r\n  const resp =  await fetch( url );\r\n  const { data } =  await resp.json();\r\n\r\n  const gifs = data.map ( img => {\r\n\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n    }\r\n\r\n  });\r\n\r\n  return gifs;\r\n}","import React from 'react';\r\nimport CardGif from './CardGif';\r\nimport PropTypes from 'prop-types';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GridGifs = (  { category } ) => {\r\n\r\n  const { data:images, loading } = useFetchGifs( category );\r\n\r\n  return (\r\n    <>\r\n    <h3> Gifs de { category } </h3>\r\n    {<div className = 'container' >\r\n         {\r\n          images.map( imgs => (\r\n            <CardGif \r\n              key = { imgs.id }\r\n              { ...imgs }\r\n            />\r\n          ) )\r\n         }\r\n    </div>}\r\n    </>\r\n  )\r\n}\r\n\r\n// Obligatorio el props category para el componente GridGifs\r\n\r\nGridGifs.propTypes = {\r\n  category: PropTypes.string.isRequired\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\nimport { getFetchGifs }  from '../getFetchGifs';\r\n\r\n\r\nexport const useFetchGifs = ( category  ) => {\r\n\r\n\r\n  const [state, setState] = useState({\r\n    data:[],\r\n    loading: true\r\n  })\r\n\r\n    // Ejecutamos solo una vez la peticion\r\n    useEffect(() => {\r\n      getFetchGifs(category).then( imgs => setState({ data:imgs, loading:false }));\r\n    },[ category ]);\r\n\r\n  return state;\r\n}\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n\r\nexport const AddCategory = (  { setCategory }  ) => {\r\n\r\n  const [value, setValue] = useState('');\r\n\r\n  // Seteamos el valor del input en el estado\r\n  const handleInputChange = (e) => { \r\n    setValue(  e.target.value );\r\n  }\r\n\r\n  // Setiamos el valor del input en setCategory\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (  value.trim().length > 3 ) {\r\n      setCategory( categories => [  value, ...categories ] );\r\n      setValue('');\r\n\r\n    }else {\r\n      Swal.fire({\r\n        title: 'Error :(',\r\n        text: 'Error al buscar sus gifs',\r\n        icon: 'error',\r\n        confirmButtonText: 'Reintentar',\r\n        confirmButtonColor: '#20232A'\r\n      })\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <form onSubmit = { handleSubmit } >\r\n      <div className=\"add__category\">\r\n      <input\r\n          type=\"text\"\r\n          placeholder =\" Ingrese una categorÃ­a para buscar sus gifs\"\r\n          value = { value }\r\n          onChange = { handleInputChange }\r\n         />\r\n        <button type =\"submit\" >Buscar</button>\r\n\r\n      </div>\r\n    </form>\r\n    \r\n  )\r\n}\r\n\r\n\r\n// AddCategory requiere el props setCategory\r\n\r\nAddCategory.propTypes = {\r\n  setCategory: PropTypes.func.isRequired\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { AddCategory } from './AddCategory';\r\n\r\nexport const Navbar = (  { setCategory } ) => {\r\n  return (\r\n    <nav className = 'navbar'>\r\n\r\n        <h1>Buscador de Gifs</h1>\r\n        <AddCategory setCategory = { setCategory }/>\r\n      \r\n    </nav>\r\n  )\r\n}\r\n\r\n// Navbar requiere el props setCategory\r\n\r\nNavbar.propTypes = {\r\n  setCategory: PropTypes.func.isRequired\r\n}\r\n","import React, { useState } from 'react';\r\nimport { GridGifs } from './components/GridGifs';\r\nimport { Navbar } from './components/Navbar';\r\n\r\n\r\nexport const GifsApp = () => {\r\n\r\n  const [categories, setCategory] = useState(['Goku']);\r\n\r\n  return <> \r\n  \r\n    <Navbar setCategory = { setCategory } /> \r\n    {\r\n      categories.map( category =>  (\r\n        <GridGifs\r\n          key = { category } \r\n          category = { category }\r\n        />\r\n      ))\r\n    }\r\n    \r\n  </>\r\n\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GifsApp } from './GifsApp';\n\nReactDOM.render(\n  <GifsApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}